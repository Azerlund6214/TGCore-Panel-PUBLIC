<?php
    # - ### ### ###
    # - ### ###
    
    include 'ALL=includes/includes-BASIC.php';
    include 'GLOBAL = Settings.php';
    
	use LibMy\Ancii;
    use LibMy\Sleeper;
    use LibMy\FileJsoner;
	use LibMy\TryCatcher;
	
	# - ### ###
    # - ### ### ###
    # - ### ###
    
    include 'TGC = BEGIN = NEW OR DD.php';
    
    # - ### ###
    # - ### ### ###
    # - ### ###
    
    function generateTextFor_Film_1_Basic($data)
    {
        $countryFin = '';
        if( count($data['COUNTRY_ARR']) === 1 ) $countryFin = ''.$data['COUNTRY_ARR'][0];
        if( count($data['COUNTRY_ARR']) === 2 ) $countryFin = ''.$data['COUNTRY_ARR'][0].', '.$data['COUNTRY_ARR'][1];
        if( count($data['COUNTRY_ARR']) === 3 ) $countryFin = ''.$data['COUNTRY_ARR'][0].', '.$data['COUNTRY_ARR'][1].', '.$data['COUNTRY_ARR'][2];
        
        $genreFin = '';
        if( count($data['GENRE_ARR']) === 1 ) $genreFin = '#'.$data['GENRE_ARR'][0];
        if( count($data['GENRE_ARR']) === 2 ) $genreFin = '#'.$data['GENRE_ARR'][0].' #'.$data['GENRE_ARR'][1];
        if( count($data['GENRE_ARR']) === 3 ) $genreFin = '#'.$data['GENRE_ARR'][0].' #'.$data['GENRE_ARR'][1].' #'.$data['GENRE_ARR'][2];
        
        $textStringsArr = [
            'üé¨ '.$data['ABOUT_TITLE'].' üî•',
            '',
            'üìÖ '.$data['ABOUT_YEAR'].' | '.$countryFin.' üåè',
            '',
            'üìå '.$data['ABOUT_DESC_END_LAST_DOT'],
            '',
            'üèÜ –†–µ–π—Ç–∏–Ω–≥:',
            'üé© –ö—Ä–∏—Ç–∏–∫–∏ - '.$data['ABOUT_RATE_CRIT'],
            'üçø –ó—Ä–∏—Ç–µ–ª–∏ - '.$data['ABOUT_RATE_USER'],
            '',
            'üîÆ –ñ–∞–Ω—Ä: '.$genreFin,
        ];
        
        return implode(PHP_EOL,$textStringsArr);
    }
    function generateTextFor_Film_2_Rus($data)
    {
        #$countryFin = '';
        #if( count($data['COUNTRY_ARR']) === 1 ) $countryFin = ''.$data['COUNTRY_ARR'][0];
        #if( count($data['COUNTRY_ARR']) === 2 ) $countryFin = ''.$data['COUNTRY_ARR'][0].', '.$data['COUNTRY_ARR'][1];
        #if( count($data['COUNTRY_ARR']) === 3 ) $countryFin = ''.$data['COUNTRY_ARR'][0].', '.$data['COUNTRY_ARR'][1].', '.$data['COUNTRY_ARR'][2];
        
        $genreFin = '';
        if( count($data['GENRE_ARR']) === 1 ) $genreFin = '#'.$data['GENRE_ARR'][0];
        if( count($data['GENRE_ARR']) === 2 ) $genreFin = '#'.$data['GENRE_ARR'][0].' #'.$data['GENRE_ARR'][1];
        if( count($data['GENRE_ARR']) === 3 ) $genreFin = '#'.$data['GENRE_ARR'][0].' #'.$data['GENRE_ARR'][1].' #'.$data['GENRE_ARR'][2];
        
        $textStringsArr = [
            'üé¨üçø '.$data['ABOUT_TITLE'].' ('.$data['ABOUT_YEAR'].')',
            '',
            '<i>'.$data['ABOUT_DESC_END_LAST_DOT'].'</i>',
            '',
            'üé• –†–µ–∂–∏—Å—Å–µ—Ä: '.$data['ABOUT_DIRECTOR'],
            'üç∑ –û—Ü–µ–Ω–∫–∞ –∫—Ä–∏—Ç–∏–∫–æ–≤: '.$data['ABOUT_RATE_CRIT'],
            '',
            ''.$genreFin,
        ];
        
        return implode(PHP_EOL,$textStringsArr);
    }
    function generateTextFor_Film_3_Mult($data)
    {
        #$countryFin = '';
        #if( count($data['COUNTRY_ARR']) === 1 ) $countryFin = ''.$data['COUNTRY_ARR'][0];
        #if( count($data['COUNTRY_ARR']) === 2 ) $countryFin = ''.$data['COUNTRY_ARR'][0].', '.$data['COUNTRY_ARR'][1];
        #if( count($data['COUNTRY_ARR']) === 3 ) $countryFin = ''.$data['COUNTRY_ARR'][0].', '.$data['COUNTRY_ARR'][1].', '.$data['COUNTRY_ARR'][2];
        
        $genreFin = '';
        if( count($data['GENRE_ARR']) === 1 ) $genreFin = '#'.$data['GENRE_ARR'][0];
        if( count($data['GENRE_ARR']) === 2 ) $genreFin = '#'.$data['GENRE_ARR'][0].' #'.$data['GENRE_ARR'][1];
        if( count($data['GENRE_ARR']) === 3 ) $genreFin = '#'.$data['GENRE_ARR'][0].' #'.$data['GENRE_ARR'][1].' #'.$data['GENRE_ARR'][2];
        
        $genreFin = str_replace('#–ú—É–ª—å—Ç–∏–∫–∏','', $genreFin);
        $genreFin = str_replace('  ',' ', $genreFin); # –ú–æ–∂–µ—Ç –±—ã—Ç—å –¥–≤–æ–π–Ω–æ–π –ø—Ä–æ–±–µ–ª.
        
        $textStringsArr = [
            'üåü '.$data['ABOUT_TITLE'].' ('.$data['ABOUT_YEAR'].')',
            '',
            'üìç '.$data['ABOUT_DESC_END_LAST_DOT'].'',
            '',
            'üåè –°—Ç—Ä–∞–Ω–∞: '.$data['COUNTRY_ARR'][0],
            'üçø –û—Ü–µ–Ω–∫–∏ –∑—Ä–∏—Ç–µ–ª–µ–π: '.$data['ABOUT_RATE_USER'],
            'üìÖ –ü—Ä–µ–º—å–µ—Ä–∞: '.$data['DATE_RUS']['D'].'.'.$data['DATE_RUS']['M'].'.'.$data['DATE_RUS']['Y'],
            '',
            '‚öúÔ∏è '.$genreFin,
        ];
        
        return implode(PHP_EOL,$textStringsArr);
    }
    function generateTextFor_Game_1($data)
    {
        /*
            "_PAGE_URL" => "https://www.chaynikam.info/Dead_Space_(2023).html"
            "_PARSE_DT" => "2023-02-10 02:16:57"
            "_NULLS_COUNT" => 0
            "IMG_COVER_URL_RAW" => "../prevgame/Dead_Space_(2023)-ver.jpg"
            "IMG_COVER_URL" => "https://www.chaynikam.info/prevgame/Dead_Space_(2023)-ver.jpg"
            "NAME" => "Dead Space (2023)"
            "GENRES_ARR" => array:4 [ ‚Ä¶4]
            "GENRES_ARR_CNT" => 4
            "DATE_RELEASE" => "27.01.2023"
            "RATING_AGE" => "18+"
            "DEV_STUDIO" => "MOTIVE"
            "RATING" => "89"
            "DESC_ARR" => array:3 [ ‚Ä¶3]
            "DESC_ARR_CNT" => 3
              "DESC_VIDEO" => array:3 [‚ñº
                    0 => array:3 [‚ñº
                      "URL_RAW" => "https://www.youtube.com/embed/ctQl9wa3ydE?rel=0"
                      "URL" => "https://www.youtube.com/watch?v=ctQl9wa3ydE"
                      "TITLE" => "Dead Space Official Launch Trailer"
            "DESC_VIDEO_CNT" => 3
              "DESC_PHOTO" => array:12 [‚ñº
                        0 => array:2 [‚ñº
                          "URL" => "https://www.chaynikam.info/imgames/Dead_Space_(2023)-10.jpg"
                          "RESOLUTION" => "1920x1080"
            "DESC_PHOTO_CNT" => 12
            "TTH_DISK_SPACE" => "50 GB"
        */
        
        
        $finArr = [ ];
        
        
        
        
        $finArr []= 'üéÆ '.$data['NAME'].' üî•';
        $finArr []= '';
        $finArr []= '‚ú® '.$data['DESC_ARR'][0].'';  # –ë—ã–≤–∞–ª–æ –≤—ã–ª–µ—Ç–∞–ª –∏–∑-–∑–∞ 0
        if( isset($data['DESC_ARR'][1]) ) $finArr []= ''.str_replace(';<br />',PHP_EOL,$data['DESC_ARR'][1]).'';
        if( isset($data['DESC_ARR'][2]) ) $finArr []= ''.str_replace(';<br />',PHP_EOL,$data['DESC_ARR'][2]).'';
        #';<br />'
        
        
        $finArr []= '';
        
        $rate = '';
        $data['RATING'] = floor($data['RATING']);
        if(  $data['RATING'] <  50 ) $rate = '‚≠ê';
        if( ($data['RATING'] >= 50) && ($data['RATING'] < 60)) $rate = '‚≠ê‚≠ê';
        if( ($data['RATING'] >= 60) && ($data['RATING'] < 80)) $rate = '‚≠ê‚≠ê‚≠ê';
        if( ($data['RATING'] >= 80) && ($data['RATING'] < 90)) $rate = '‚≠ê‚≠ê‚≠ê‚≠ê';
        if( ($data['RATING'] >= 90) ) $rate = '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê';
        $finArr []= '–†–µ–π—Ç–∏–Ω–≥: '.$rate.' ('.$data['RATING'].') ';
        
        $finArr []= '';
        
        $finArr []= 'üíé –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: '.$data['DEV_STUDIO'].'';
        $finArr []= 'üìÖ –î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: '.$data['DATE_RELEASE'].'';
        
        $space = explode(' ', $data['TTH_DISK_SPACE']);
        if( count($space) === 2 )
            $finArr []= 'üíæ –†–∞–∑–º–µ—Ä: '.$space[0].'Gb ';
        
        $finArr []= '';
        
        if( $data['DESC_VIDEO_CNT'] >=1 )
        {
            $finArr []= 'üé© –¢—Ä–µ–π–ª–µ—Ä—ã –∏ –æ–±–∑–æ—Ä—ã:';
            
            if( isset($data['DESC_VIDEO'][0]['URL']) && str_contains($data['DESC_VIDEO'][0]['URL'],'youtube.com/watch') )
                $finArr []= 'üî∏'.' - <a href="'.$data['DESC_VIDEO'][0]['URL'].'">–ü–µ—Ä–≤—ã–π</a>';
            
            if( isset($data['DESC_VIDEO'][1]['URL']) && str_contains($data['DESC_VIDEO'][1]['URL'],'youtube.com/watch') )
                $finArr []= 'üîπ'.' - <a href="'.$data['DESC_VIDEO'][1]['URL'].'">–í—Ç–æ—Ä–æ–π</a>';
            
            if( isset($data['DESC_VIDEO'][2]['URL']) && str_contains($data['DESC_VIDEO'][2]['URL'],'youtube.com/watch') )
                $finArr []= '‚ô¶'.' - <a href="'.$data['DESC_VIDEO'][2]['URL'].'">–¢—Ä–µ—Ç–∏–π</a>';
            
            $finArr []= '';
        }
        
        
        
        
        if( $data['GENRES_ARR_CNT'] <= 0 ) dd('–ñ–∞–Ω—Ä—ã = 0');
        #if( $data['GENRES_ARR_CNT'] >= 5 ) dd('–ñ–∞–Ω—Ä—ã >=5');
        
        $genreFin = '';
        if( $data['GENRES_ARR_CNT'] === 1 ) $genreFin = '#'.$data['GENRES_ARR'][0];
        if( $data['GENRES_ARR_CNT'] === 2 ) $genreFin = '#'.$data['GENRES_ARR'][0].' #'.$data['GENRES_ARR'][1];
        if( $data['GENRES_ARR_CNT'] === 3 ) $genreFin = '#'.$data['GENRES_ARR'][0].' #'.$data['GENRES_ARR'][1].' #'.$data['GENRES_ARR'][2];
        if( $data['GENRES_ARR_CNT']  >= 4 ) $genreFin = '#'.$data['GENRES_ARR'][0].' #'.$data['GENRES_ARR'][1].' #'.$data['GENRES_ARR'][2].' #'.$data['GENRES_ARR'][3];
        
        $genreFin = str_replace('  ',' ', $genreFin); # –ú–æ–∂–µ—Ç –±—ã—Ç—å –¥–≤–æ–π–Ω–æ–π –ø—Ä–æ–±–µ–ª.
        $genreFin = str_replace('#–û–Ω–ª–∞–π–Ω –∏–≥—Ä–∞','#–û–Ω–ª–∞–π–Ω_–∏–≥—Ä–∞', $genreFin);
        $genreFin = str_replace('#–£–ª–∏—á–Ω—ã–µ –≥–æ–Ω–∫–∏','#–£–ª–∏—á–Ω—ã–µ_–≥–æ–Ω–∫–∏', $genreFin);
        $genreFin = str_replace('#–í–æ–∑–¥—É—à–Ω—ã–π –±–æ–π','#–í–æ–∑–¥—É—à–Ω—ã–π_–±–æ–π', $genreFin);
        $genreFin = str_replace('#–ë–æ–π—Å–Ω–∞–π–ø–µ—Ä–æ–≤','#–ë–æ–π_—Å–Ω–∞–π–ø–µ—Ä–æ–≤', $genreFin);
        $genreFin = str_replace('#–§–æ—Ä–º—É–ª–∞ 1','#–§–æ—Ä–º—É–ª–∞1', $genreFin);
        $finArr []= 'üïπ '.$genreFin.'';
        
        
        return implode(PHP_EOL,$finArr);
    }
    
    # TODO:  –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –∞—Å–æ—Ü –º–∞—Å—Å–∏–≤–∞ —Å –∏–Ω—Ñ–æ–π –∏ –¥–∞–º–ø –µ—ë
    function checkAllowSendOrDD($dataArr, $textFin)
    {
    
        $scheduleMaxTextLen = 1950; # TODO !!!!
        
        
        $pageUrl = $dataArr['PAGE_URL'] ?? $dataArr['_PAGE_URL'];
        
        if( in_array($pageUrl, [
            'https://www.chaynikam.info/Pathfinder_Kingmaker.html',
            'https://www.chaynikam.info/Trine_4_The_Nightmare_Prince.html',
            'https://www.chaynikam.info/Alan_Wake_Remastered.html',
            'https://www.chaynikam.info/Wasteland_3.html',
            'https://www.chaynikam.info/Far_Cry_3.html',
            'https://www.chaynikam.info/Immortals_Fenyx_Rising.html',
            'https://www.chaynikam.info/Far_Cry_New_Dawn.html',
            'https://www.chaynikam.info/Jurassic_World_Evolution_2.html',
            'https://www.chaynikam.info/Nex_Machina.html',
            'https://www.chaynikam.info/Marvels_Avengers.html',
            'https://www.chaynikam.info/ArmA_3.html',
            'https://www.chaynikam.info/Alan_Wake.html',
            'https://www.chaynikam.info/King%60s_Bounty_2.html',
            'https://www.chaynikam.info/Star_Wars_Battlefront_2_(2017).html',
            'https://www.chaynikam.info/Metro_Exodus.html',
            'https://www.chaynikam.info/Metro_Last_Light.html',
            #'',
            #'',
        ]) )
        {
            dump( Ancii::anyText('URL BAN'));
            return true;
            #dd('–ó–∞–±–∞–Ω–µ–Ω—ã–π URL');
        }
        
        # - ###
        
        
        Ancii::anyTextDump('LEN = '.strlen($textFin));
        # NOTE: –í—ã–ª–µ—Ç MEDIA_CAPTION_TOO_LONG  400      1883  2122  2800  2106 1990
        # –ù–æ—Ä–º  1824  1933
        
        if( strlen($textFin) >= $scheduleMaxTextLen )
        {
            
            #dd( Ancii::anyText('Too big len'));
            dump( Ancii::anyText('Too big len'));
            return true;
        }
        
        #dd($textFinal);
        
    }
    
    # - ### ###
    # - ### ### ###
    # - ### ###
    
    #   NOTE: –¢–æ–ª—å–∫–æ —Ä—É—á–Ω–æ–π –∑–∞–ª–∏–≤.
    
    # - ### ### ###
    #   NOTE:
    
    $DataSets_Folder = 'SCHED/';
    $groupViewsArr = [
    
        /*
        $CHATS['G-TEST'] => [
           'DATASET_DONE' => $DataSets_Folder . 'TEST = DATASET = DONE.json', #
           'DATASET_WAIT' => $DataSets_Folder . 'TEST = DATASET = WAIT.json', #
             'DATES_DONE' => $DataSets_Folder . 'TEST = DATES = DONE.json', #
             'DATES_WAIT' => $DataSets_Folder . 'TEST = DATES = WAIT.json', #
           'PEER' => $CHATS['G-TEST'], #
        ], # */
        
         /*
        $CHATS['G-KINO-1'] => [
            'DATASET_DONE' => $DataSets_Folder . 'G-KINO-1-BASIC = DATASET = DONE.json', #
            'DATASET_WAIT' => $DataSets_Folder . 'G-KINO-1-BASIC = DATASET = WAIT.json', #
              'DATES_DONE' => $DataSets_Folder . 'G-KINO-1-BASIC = DATES = DONE.json', #
              'DATES_WAIT' => $DataSets_Folder . 'G-KINO-1-BASIC = DATES = WAIT.json', #
            'PEER' => $CHATS['G-KINO-1'], #
        ], # */
        
         /*
        $CHATS['G-KINO-2'] => [
            'DATASET_DONE' => $DataSets_Folder . 'G-KINO-2-RUS = DATASET = DONE.json', #
            'DATASET_WAIT' => $DataSets_Folder . 'G-KINO-2-RUS = DATASET = WAIT.json', #
              'DATES_DONE' => $DataSets_Folder . 'G-KINO-2-RUS = DATES = DONE.json', #
              'DATES_WAIT' => $DataSets_Folder . 'G-KINO-2-RUS = DATES = WAIT.json', #
            'PEER' => $CHATS['G-KINO-2'], #
        ], # */
        
         /*
        $CHATS['G-KINO-3'] => [
            'DATASET_DONE' => $DataSets_Folder . 'G-KINO-3-MULT = DATASET = DONE.json', #
            'DATASET_WAIT' => $DataSets_Folder . 'G-KINO-3-MULT = DATASET = WAIT.json', #
              'DATES_DONE' => $DataSets_Folder . 'G-KINO-3-MULT = DATES = DONE.json', #
              'DATES_WAIT' => $DataSets_Folder . 'G-KINO-3-MULT = DATES = WAIT.json', #
            'PEER' => $CHATS['G-KINO-3'], #
        ], # */
        
         /*
        $CHATS['G-GAME-1'] => [
            'DATASET_DONE' => $DataSets_Folder . 'G-GAME-1 = DATASET = DONE.json', #
            'DATASET_WAIT' => $DataSets_Folder . 'G-GAME-1 = DATASET = WAIT.json', #
              'DATES_DONE' => $DataSets_Folder . 'G-GAME-1 = DATES = DONE.json', #
              'DATES_WAIT' => $DataSets_Folder . 'G-GAME-1 = DATES = WAIT.json', #
            'PEER' => $CHATS['G-GAME-1'], #
        ], # */
        
    ];
    
    # - ### ### ###
    #   NOTE:
    
    
    #dd( $groupViewsArr );
    #$a = 1;
    # - ### ### ###
    #   NOTE:
    
	# NOTE:
    #dd('–û—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ, –º–∞—Å—Å–∏–≤—ã –∑–∞–∫–æ–º–º–µ–Ω—á–µ–Ω—ã, –ª–∏—Ç—å –ø–æ –æ–¥–Ω–æ–º—É');
    
    $test_maxCount = 100;
    
    
    try {
        # - ###
        #$scheduleLimit = 10;
        $scheduleLimit = 100;
        $scheduleWaitTimeSec = 1;
        
        foreach( $groupViewsArr as $k => $groupSettings )
        {
            # - ###
            echo '<br><br><hr color="red">';
            
            $TGC->setConfig_Chat($groupSettings['PEER']);
            
            # - ###
            
            
            # - ###
            
            foreach( range(1,999) as $i )
            {
                # - ###
                echo '<br><br><hr color="red">';
                dump("–ì—Ä—É–ø–ø–∞: $k  =>  I: $i");
                # - ###
                
                if( $i-1 === $test_maxCount )
                {
                    dd("I = $i = dd");
                }
                
                # - ###
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤ –æ—Ç–ª–æ–∂–∫–µ –µ—â–µ –µ—Å—Ç—å –º–µ—Å—Ç–æ
                $TGC->api_groupGet_PostsScheduled_Count();
                $postsCurrent = $TGC->getResult();
                
                dump("–°–µ–π—á–∞—Å –≤ –æ—Ç–ª–æ–∂–∫–µ: $postsCurrent  –∏–∑  $scheduleLimit");
                
                if( $postsCurrent >= $scheduleLimit )
                {
                    dump('–û—Ç–ª–æ–∂–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–æ –ª–∏–º–∏—Ç–∞');
                    break;
                }
                # - ###
                
                # –ß—Ç–µ–Ω–∏–µ - –î–∞—Ç–∞—Å–µ—Ç
                $DS_Data_ALL = FileJsoner::getBase_FullAsArray($groupSettings['DATASET_WAIT']);
                
                # –ß—Ç–µ–Ω–∏–µ - –î–∞—Ç—ã
                $DS_Time_ALL = FileJsoner::getBase_FullAsArray($groupSettings['DATES_WAIT']);
                
                # - ###
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –Ω–µ –∫–æ–Ω—á–∏–ª–∏—Å—å
                if( count($DS_Data_ALL) === 0 ) dd('–ö–æ–Ω—á–∏–ª–∏—Å—å –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞—Ç–∞—Å–µ—Ç—ã');
                if( count($DS_Time_ALL) === 0 ) dd('–ö–æ–Ω—á–∏–ª–∏—Å—å –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤—Ä–µ–º—è –ø–æ—Å—Ç–æ–≤');
                
                # - ###
                
                # –ë–µ—Ä–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π
                
                $DS_Data_Key = array_rand($DS_Data_ALL);
                $DS_Data_Val = $DS_Data_ALL[$DS_Data_Key];
                
                
                $DS_Time_Key_T = array_key_first($DS_Time_ALL);
                $DS_Time_Val_U = current($DS_Time_ALL);
                
                if( ! empty( $DS_Data_Val['TG_SENDED'] ) ) # –£—Å—Ç–∞—Ä–µ–≤—à–µ–µ, –≤ —Ñ–∏–ª—å–º–∞—Ö.
                {
                    dump('–ï—Å—Ç—å –∫–ª—é—á TG_SENDED, –∑–Ω–∞—á–∏—Ç —É–∂–µ –∑–∞–ª–∏–≤–∞–ª - –ø—Ä–æ–ø—É—Å–∫–∞—é');
                    continue;
                    # TODO: –í—ã—Ä–µ–∑–∞—Ç—å –∏ —É–±—Ä–∞—Ç—å–≤ Done
                }
                
                # - ###
                
                dump($DS_Data_Key, $DS_Data_Val);
                
                # - ###
                
                $post_DT_T = $DS_Time_Key_T;
                $post_DT_U = $DS_Time_Val_U;
                
                dump("$post_DT_T => $post_DT_U");
                
                #dd($DS_Data);
                
                switch($groupSettings['PEER'])
                {
                    case $CHATS['G-TEST']:
                    case $CHATS['G-GAME-1']:
                        $post_Text = generateTextFor_Game_1($DS_Data_Val);
                        $post_ImgUrl = $DS_Data_Val['IMG_COVER_URL'];
                        break;
                    case $CHATS['G-KINO-1']:
                        $post_Text = generateTextFor_Film_1_Basic($DS_Data_Val);
                        $post_ImgUrl = $DS_Data_Val['IMG']['URL'];
                        break;
                    case $CHATS['G-KINO-2']:
                        $post_Text = generateTextFor_Film_2_Rus($DS_Data_Val);
                        $post_ImgUrl = $DS_Data_Val['IMG']['URL'];
                        break;
                    case $CHATS['G-KINO-3']:
                        $post_Text = generateTextFor_Film_3_Mult($DS_Data_Val);
                        $post_ImgUrl = $DS_Data_Val['IMG']['URL'];
                        break;
                    default: dd('–î–µ—Ñ–æ–ª—Ç —Å–≤–∏—Ç—á–∞ –ø–æ –ø–∏—Ä–∞–º');
                }
                
                
                dump($post_ImgUrl, $post_Text);
                #dd();
                
                
                # - ###
                
                #dd($DS_Data);
                echo "<br><a href='$post_ImgUrl' target='_blank'>$post_ImgUrl</a>";
                
                $pageUrl = $DS_Data_Val['PAGE_URL'] ?? $DS_Data_Val['_PAGE_URL'] ?? 'NULL';
                echo "<br><a href='".$pageUrl."' target='_blank'>".$pageUrl."</a>";
                
                # - ###
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Ä–µ—à–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–ª–∏ –Ω–µ—Ç.
                $r = checkAllowSendOrDD( $DS_Data_Val , $post_Text );
                
                if( $r === true )
                {
                    dump('–°–∫–∏–ø–∞—é',$pageUrl);
                    continue;
                }
                
                # - ###
                
                # –ó–∞–ª–∏–≤
                dump('–û—Ç–ø—Ä–∞–≤–ª—è—é'); flush();
                $TGC->api_msgSend_Any($post_Text,$post_DT_U,$post_ImgUrl);
                dump('–ì–æ—Ç–æ–≤–æ'); flush();
                
                
                # - ###
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
                
                if( $TGC->response_ErrorAny() )
                {
                    Ancii::failed();
                    
                    if($TGC->response_ErrorTg())
                    {
                        Ancii::anyTextDump($TGC->response_ErrorTgGetMsg());
                        Ancii::anyTextDump($TGC->response_ErrorTgGetCode());
                    }
                    
                    $TGC->responseAll_Dump();
                    
                    dd('–í—ã—Ö–æ–∂—É –∏–∑ —Ü–∏–∫–ª–∞ —Ç–∫ —Ñ–µ–∏–ª');
                    dump('–í—ã—Ö–æ–∂—É –∏–∑ —Ü–∏–∫–ª–∞ —Ç–∫ —Ñ–µ–∏–ª');
                    break;
                }
                
                
                Ancii::success();
                
                $TGC->api_groupGet_PostsScheduled_Count();
                dump('–í –æ—Ç–ª–æ–∂–∫–µ —Å–µ–π—á–∞—Å => '.$TGC->getResult());
                
                # - ###
                
                # –î–∞—Ç–∞—Å–µ—Ç —É—Å–ø–µ—Ö = –î–æ–ø–∏—Å—ã–≤–∞—é
                FileJsoner::action_addByKey($groupSettings['DATASET_DONE'],$DS_Data_Val);
                
                # –î–∞—Ç–∞ —É—Å–ø–µ—Ö = –î–æ–ø–∏—Å—ã–≤–∞—é
                FileJsoner::action_addByKey($groupSettings['DATES_DONE'],$DS_Time_Val_U,$DS_Time_Key_T);
                
                
                # –î–∞—Ç—ã —É—Å–ø–µ—Ö = –ß—Ç–µ–Ω–∏–µ / –°–∫–ª–µ–π–∫–∞ / –ó–∞–ø–∏—Å—å
                #$DS_Done_Time = getAsArray($groupSettings['DATES_DONE']);
                #$DS_Done_Time[$DS_Time_Key_T]= $DS_Time_doned_U;
                #FileJsoner::action_writeArray($groupSettings['DATES_DONE'],$DS_Done_Time);
                
                # - ###
                #$a = current($DS_Time);
                # –£–¥–∞–ª–µ–Ω–∏–µ+–ó–∞–ø–∏—Å—å –±–µ–∑ = –î–∞—Ç–∞—Å–µ—Ç
                FileJsoner::action_deleteKey($groupSettings['DATASET_WAIT'],$DS_Data_Key);
                
                #$DS_Time_doned_U = $DS_Time_Val_U;
                #unset($DS_Time_Key_T);
                #FileJsoner::action_writeArray($groupSettings['DATES_DONE'],$DS_Time_ALL);
                
                # –£–¥–∞–ª–µ–Ω–∏–µ+–ó–∞–ø–∏—Å—å –±–µ–∑ = –î–∞—Ç—ã
                FileJsoner::action_deleteKey($groupSettings['DATES_WAIT'],$DS_Time_Key_T);
                #unset($DS_Data_Val);
                #FileJsoner::action_writeArray($groupSettings['DATASET_DONE'],$DS_Data_ALL);
                
                # - ###
                
        
                
                # - ###
    
                Sleeper::sleeper($scheduleWaitTimeSec);
                
                # - ###
        
        
            }# Foreach I
            #dd(__LINE__);
    
    
            # - ###
        }
        
    
    }catch( \Throwable $e){ TryCatcher::ddOnTryCatch($e); }
    
    
    $TGC->onENDING_DD();
    
    
    # - ### ### ###
    #   NOTE:
    
    
    # - ##### ##### ##### ##### ##### ##### ######
    # - #####             #####             ######
    # - ##### ##### ##### ##### ##### ##### ######
    
    # End class
